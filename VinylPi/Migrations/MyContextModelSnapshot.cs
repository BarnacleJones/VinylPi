// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VinylPi.DataAccess;

#nullable disable

namespace VinylPi.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Artist", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Anv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BasicInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Join")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resource_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tracks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Cover_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Master_id")
                        .HasColumnType("int");

                    b.Property<string>("Master_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resource_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thumb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BasicInformation", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Descriptions", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormatId");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BasicInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.ToTable("Formats", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Genres", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("BasicInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BasicInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Catno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity_type_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resource_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.ToTable("Labels", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Pagination", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Items")
                        .HasColumnType("int");

                    b.Property<int?>("Pages")
                        .HasColumnType("int");

                    b.Property<int?>("Per_page")
                        .HasColumnType("int");

                    b.Property<int?>("UrlsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrlsId");

                    b.ToTable("Pagination", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Release", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Date_added")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Instance_id")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RootId")
                        .HasColumnType("int");

                    b.Property<int?>("basic_informationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RootId");

                    b.HasIndex("basic_informationId");

                    b.ToTable("Releases", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Root", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PaginationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaginationId");

                    b.ToTable("Root", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Styles", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("BasicInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Urls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Next")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Urls", (string)null);
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Artist", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", null)
                        .WithMany("Artists")
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Descriptions", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.Format", null)
                        .WithMany("Descriptions")
                        .HasForeignKey("FormatId");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Format", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", null)
                        .WithMany("Formats")
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Genres", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", null)
                        .WithMany("Genres")
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Label", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", null)
                        .WithMany("Labels")
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Pagination", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.Urls", "Urls")
                        .WithMany()
                        .HasForeignKey("UrlsId");

                    b.Navigation("Urls");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Release", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.Root", null)
                        .WithMany("Releases")
                        .HasForeignKey("RootId");

                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", "basic_information")
                        .WithMany()
                        .HasForeignKey("basic_informationId");

                    b.Navigation("basic_information");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Root", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.Pagination", "Pagination")
                        .WithMany()
                        .HasForeignKey("PaginationId");

                    b.Navigation("Pagination");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Styles", b =>
                {
                    b.HasOne("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", null)
                        .WithMany("Styles")
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.BasicInformation", b =>
                {
                    b.Navigation("Artists");

                    b.Navigation("Formats");

                    b.Navigation("Genres");

                    b.Navigation("Labels");

                    b.Navigation("Styles");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Format", b =>
                {
                    b.Navigation("Descriptions");
                });

            modelBuilder.Entity("VinylPi.Models.ApiResponses.CollectionModels.Root", b =>
                {
                    b.Navigation("Releases");
                });
#pragma warning restore 612, 618
        }
    }
}
